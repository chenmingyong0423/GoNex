// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package asset

import (
	"github.com/chenmingyong0423/fnote/server/internal/asset/internal/repository"
	"github.com/chenmingyong0423/fnote/server/internal/asset/internal/repository/dao"
	"github.com/chenmingyong0423/fnote/server/internal/asset/internal/service"
	"github.com/chenmingyong0423/fnote/server/internal/asset/internal/web"
	"github.com/google/wire"
	"go.mongodb.org/mongo-driver/mongo"
)

// Injectors from wire.go:

func InitAssetModule(mongoDB *mongo.Database) *Module {
	assetFolderDao := dao.NewAssetFolderDao(mongoDB)
	assetFolderRepository := repository.NewAssetFolderRepository(assetFolderDao)
	assetDao := dao.NewAssetDao(mongoDB)
	assetRepository := repository.NewAssetRepository(assetDao)
	assetService := service.NewAssetService(assetFolderRepository, assetRepository)
	assetHandler := web.NewAssetHandler(assetService)
	module := &Module{
		Svc: assetService,
		Hdl: assetHandler,
	}
	return module
}

// wire.go:

var AssetProviders = wire.NewSet(web.NewAssetHandler, service.NewAssetService, repository.NewAssetRepository, dao.NewAssetDao, wire.Bind(new(service.IAssetService), new(*service.AssetService)), wire.Bind(new(repository.IAssetRepository), new(*repository.AssetRepository)), wire.Bind(new(dao.IAssetDao), new(*dao.AssetDao)), repository.NewAssetFolderRepository, dao.NewAssetFolderDao, wire.Bind(new(repository.IAssetFolderRepository), new(*repository.AssetFolderRepository)), wire.Bind(new(dao.IAssetFolderDao), new(*dao.AssetFolderDao)))
