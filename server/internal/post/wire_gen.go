// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package post

import (
	"github.com/chenmingyong0423/fnote/server/internal/count_stats/service"
	service2 "github.com/chenmingyong0423/fnote/server/internal/file/service"
	"github.com/chenmingyong0423/fnote/server/internal/post/internal/repository"
	"github.com/chenmingyong0423/fnote/server/internal/post/internal/repository/dao"
	service3 "github.com/chenmingyong0423/fnote/server/internal/post/internal/service"
	"github.com/chenmingyong0423/fnote/server/internal/post/internal/web"
	"github.com/chenmingyong0423/fnote/server/internal/post_like"
	"github.com/chenmingyong0423/fnote/server/internal/website_config"
	"github.com/chenmingyong0423/go-eventbus"
	"github.com/google/wire"
	"go.mongodb.org/mongo-driver/mongo"
)

// Injectors from wire.go:

func InitPostModule(mongoDB *mongo.Database, cfgModel *website_config.Module, countStats service.ICountStatsService, fileService service2.IFileService, postLikeModel *post_like.Module, eventBus *eventbus.EventBus) *Module {
	postDao := dao.NewPostDao(mongoDB)
	postRepository := repository.NewPostRepository(postDao)
	iWebsiteConfigService := cfgModel.Svc
	postService := service3.NewPostService(postRepository, iWebsiteConfigService, countStats, fileService, eventBus)
	iPostLikeService := postLikeModel.Svc
	postHandler := web.NewPostHandler(postService, iWebsiteConfigService, iPostLikeService, countStats)
	module := &Module{
		Svc: postService,
		Hdl: postHandler,
	}
	return module
}

// wire.go:

var PostProviders = wire.NewSet(web.NewPostHandler, service3.NewPostService, repository.NewPostRepository, dao.NewPostDao, wire.Bind(new(service3.IPostService), new(*service3.PostService)), wire.Bind(new(repository.IPostRepository), new(*repository.PostRepository)), wire.Bind(new(dao.IPostDao), new(*dao.PostDao)))
