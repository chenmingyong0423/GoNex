// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package comment

import (
	"github.com/chenmingyong0423/fnote/server/internal/comment/internal/repository"
	"github.com/chenmingyong0423/fnote/server/internal/comment/internal/repository/dao"
	"github.com/chenmingyong0423/fnote/server/internal/comment/internal/service"
	"github.com/chenmingyong0423/fnote/server/internal/comment/internal/web"
	"github.com/chenmingyong0423/fnote/server/internal/message"
	"github.com/chenmingyong0423/fnote/server/internal/post"
	"github.com/chenmingyong0423/fnote/server/internal/website_config"
	"github.com/chenmingyong0423/go-eventbus"
	"github.com/google/wire"
	"go.mongodb.org/mongo-driver/mongo"
)

// Injectors from wire.go:

func InitCommentModule(mongoDB *mongo.Database, messageModule *message.Module, cfgModule *website_config.Module, postModule *post.Module, eventBus *eventbus.EventBus) *Module {
	commentDao := dao.NewCommentDao(mongoDB)
	commentRepository := repository.NewCommentRepository(commentDao)
	commentService := service.NewCommentService(commentRepository, eventBus)
	iWebsiteConfigService := cfgModule.Svc
	iPostService := postModule.Svc
	iMessageService := messageModule.Svc
	commentHandler := web.NewCommentHandler(commentService, iWebsiteConfigService, iPostService, iMessageService)
	module := &Module{
		Svc: commentService,
		Hdl: commentHandler,
	}
	return module
}

// wire.go:

var CommentProviders = wire.NewSet(web.NewCommentHandler, service.NewCommentService, repository.NewCommentRepository, dao.NewCommentDao, wire.Bind(new(service.ICommentService), new(*service.CommentService)), wire.Bind(new(repository.ICommentRepository), new(*repository.CommentRepository)), wire.Bind(new(dao.ICommentDao), new(*dao.CommentDao)))
